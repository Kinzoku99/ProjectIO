{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmfrac = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar mfrac_js_1 = require(\"../../common/Wrappers/mfrac.js\");\n\nvar mfrac_js_2 = require(\"../../../core/MmlTree/MmlNodes/mfrac.js\");\n\nvar SVGmfrac = function (_super) {\n  __extends(SVGmfrac, _super);\n\n  function SVGmfrac() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmfrac.prototype.toSVG = function (parent) {\n    this.standardSVGnode(parent);\n\n    var _a = this.node.attributes.getList('linethickness', 'bevelled'),\n        linethickness = _a.linethickness,\n        bevelled = _a.bevelled;\n\n    var display = this.isDisplay();\n\n    if (bevelled) {\n      this.makeBevelled(display);\n    } else {\n      var thickness = this.length2em(String(linethickness), .06);\n\n      if (thickness === 0) {\n        this.makeAtop(display);\n      } else {\n        this.makeFraction(display, thickness);\n      }\n    }\n  };\n\n  SVGmfrac.prototype.makeFraction = function (display, t) {\n    var svg = this.element;\n\n    var _a = this.node.attributes.getList('numalign', 'denomalign'),\n        numalign = _a.numalign,\n        denomalign = _a.denomalign;\n\n    var _b = __read(this.childNodes, 2),\n        num = _b[0],\n        den = _b[1];\n\n    var nbox = num.getBBox();\n    var dbox = den.getBBox();\n    var tex = this.font.params;\n    var a = tex.axis_height;\n    var d = .1;\n    var pad = this.node.getProperty('withDelims') ? 0 : tex.nulldelimiterspace;\n    var W = Math.max((nbox.L + nbox.w + nbox.R) * nbox.rscale, (dbox.L + dbox.w + dbox.R) * dbox.rscale);\n    var nx = this.getAlignX(W, nbox, numalign) + d + pad;\n    var dx = this.getAlignX(W, dbox, denomalign) + d + pad;\n\n    var _c = this.getTUV(display, t),\n        T = _c.T,\n        u = _c.u,\n        v = _c.v;\n\n    num.toSVG(svg);\n    num.place(nx, a + T + Math.max(nbox.d * nbox.rscale, u));\n    den.toSVG(svg);\n    den.place(dx, a - T - Math.max(dbox.h * dbox.rscale, v));\n    this.adaptor.append(svg, this.svg('rect', {\n      width: this.fixed(W + 2 * d),\n      height: this.fixed(t),\n      x: this.fixed(pad),\n      y: this.fixed(a - t / 2)\n    }));\n  };\n\n  SVGmfrac.prototype.makeAtop = function (display) {\n    var svg = this.element;\n\n    var _a = this.node.attributes.getList('numalign', 'denomalign'),\n        numalign = _a.numalign,\n        denomalign = _a.denomalign;\n\n    var _b = __read(this.childNodes, 2),\n        num = _b[0],\n        den = _b[1];\n\n    var nbox = num.getBBox();\n    var dbox = den.getBBox();\n    var tex = this.font.params;\n    var pad = this.node.getProperty('withDelims') ? 0 : tex.nulldelimiterspace;\n    var W = Math.max((nbox.L + nbox.w + nbox.R) * nbox.rscale, (dbox.L + dbox.w + dbox.R) * dbox.rscale);\n    var nx = this.getAlignX(W, nbox, numalign) + pad;\n    var dx = this.getAlignX(W, dbox, denomalign) + pad;\n\n    var _c = this.getUVQ(display),\n        u = _c.u,\n        v = _c.v;\n\n    num.toSVG(svg);\n    num.place(nx, u);\n    den.toSVG(svg);\n    den.place(dx, -v);\n  };\n\n  SVGmfrac.prototype.makeBevelled = function (display) {\n    var svg = this.element;\n\n    var _a = __read(this.childNodes, 2),\n        num = _a[0],\n        den = _a[1];\n\n    var _b = this.getBevelData(display),\n        u = _b.u,\n        v = _b.v,\n        delta = _b.delta,\n        nbox = _b.nbox,\n        dbox = _b.dbox;\n\n    var w = (nbox.L + nbox.w + nbox.R) * nbox.rscale;\n    num.toSVG(svg);\n    this.bevel.toSVG(svg);\n    den.toSVG(svg);\n    num.place(nbox.L * nbox.rscale, u);\n    this.bevel.place(w - delta / 2, 0);\n    den.place(w + this.bevel.getBBox().w + dbox.L * dbox.rscale - delta, v);\n  };\n\n  SVGmfrac.kind = mfrac_js_2.MmlMfrac.prototype.kind;\n  return SVGmfrac;\n}(mfrac_js_1.CommonMfracMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmfrac = SVGmfrac;","map":{"version":3,"mappings":"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","names":["__extends","SVGmfrac","parent","standardSVGnode","node","attributes","getList","linethickness","bevelled","display","isDisplay","makeBevelled","thickness","length2em","String","makeAtop","makeFraction","t","svg","element","numalign","denomalign","childNodes","num","den","nbox","getBBox","dbox","tex","font","params","a","axis_height","d","pad","getProperty","nulldelimiterspace","W","Math","max","L","w","R","rscale","nx","getAlignX","dx","getTUV","T","u","v","toSVG","place","h","adaptor","append","width","fixed","height","x","y","getUVQ","getBevelData","delta","bevel","mfrac_js_2","prototype","kind","mfrac_js_1","Wrapper_js_1","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/svg/Wrappers/mfrac.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmfrac wrapper for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonMfracMixin} from '../../common/Wrappers/mfrac.js';\nimport {MmlMfrac} from '../../../core/MmlTree/MmlNodes/mfrac.js';\nimport {SVGmo} from './mo.js';\n\n/*****************************************************************/\n/**\n * The SVGmfrac wrapper for the MmlMfrac object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmfrac<N, T, D> extends CommonMfracMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mfrac wrapper\n   */\n  public static kind = MmlMfrac.prototype.kind;\n\n  /**\n   * An mo element used to render bevelled fractions\n   */\n  public bevel: SVGmo<N, T, D>;\n\n  /************************************************/\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    this.standardSVGnode(parent);\n    const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n    const display = this.isDisplay();\n    if (bevelled) {\n      this.makeBevelled(display);\n    } else {\n      const thickness = this.length2em(String(linethickness), .06);\n      if (thickness === 0) {\n        this.makeAtop(display);\n      } else {\n        this.makeFraction(display, thickness);\n      }\n    }\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   * @param {number} t         The rule line thickness\n   */\n  protected makeFraction(display: boolean, t: number) {\n    const svg = this.element;\n    const {numalign, denomalign} = this.node.attributes.getList('numalign', 'denomalign');\n    const [num, den] = this.childNodes;\n    const nbox = num.getBBox();\n    const dbox = den.getBBox();\n\n    const tex = this.font.params;\n    const a = tex.axis_height;\n    const d = .1; // line's extra left- and right-padding\n    const pad = (this.node.getProperty('withDelims') ? 0 : tex.nulldelimiterspace);\n    const W = Math.max((nbox.L + nbox.w + nbox.R) * nbox.rscale,\n                       (dbox.L + dbox.w + dbox.R) * dbox.rscale);\n    const nx = this.getAlignX(W, nbox, numalign as string) + d + pad;\n    const dx = this.getAlignX(W, dbox, denomalign as string) + d + pad;\n    const {T, u, v} = this.getTUV(display, t);\n\n    num.toSVG(svg);\n    num.place(nx, a + T + Math.max(nbox.d * nbox.rscale, u));\n    den.toSVG(svg);\n    den.place(dx, a - T - Math.max(dbox.h * dbox.rscale, v));\n\n    this.adaptor.append(svg, this.svg('rect', {\n      width: this.fixed(W + 2 * d), height: this.fixed(t),\n      x: this.fixed(pad), y: this.fixed(a - t / 2)\n    }));\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   */\n  protected makeAtop(display: boolean) {\n    const svg = this.element;\n    const {numalign, denomalign} = this.node.attributes.getList('numalign', 'denomalign');\n    const [num, den] = this.childNodes;\n    const nbox = num.getBBox();\n    const dbox = den.getBBox();\n\n    const tex = this.font.params;\n    const pad = (this.node.getProperty('withDelims') ? 0 : tex.nulldelimiterspace);\n    const W = Math.max((nbox.L + nbox.w + nbox.R) * nbox.rscale,\n                       (dbox.L + dbox.w + dbox.R) * dbox.rscale);\n    const nx = this.getAlignX(W, nbox, numalign as string) + pad;\n    const dx = this.getAlignX(W, dbox, denomalign as string) + pad;\n    const {u, v} = this.getUVQ(display);\n\n    num.toSVG(svg);\n    num.place(nx, u);\n    den.toSVG(svg);\n    den.place(dx, -v);\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   */\n  protected makeBevelled(display: boolean) {\n    const svg = this.element;\n    const [num, den] = this.childNodes;\n    const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n    const w = (nbox.L + nbox.w + nbox.R) * nbox.rscale;\n\n    num.toSVG(svg);\n    this.bevel.toSVG(svg);\n    den.toSVG(svg);\n\n    num.place(nbox.L * nbox.rscale, u);\n    this.bevel.place(w - delta / 2, 0);\n    den.place(w + this.bevel.getBBox().w + dbox.L * dbox.rscale - delta, v);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}