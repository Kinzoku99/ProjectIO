{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMspaceMixin = void 0;\n\nfunction CommonMspaceMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.computeBBox = function (bbox, _recompute) {\n      if (_recompute === void 0) {\n        _recompute = false;\n      }\n\n      var attributes = this.node.attributes;\n      bbox.w = this.length2em(attributes.get('width'), 0);\n      bbox.h = this.length2em(attributes.get('height'), 0);\n      bbox.d = this.length2em(attributes.get('depth'), 0);\n    };\n\n    class_1.prototype.handleVariant = function () {};\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMspaceMixin = CommonMspaceMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAgBA,iBAAhB,CAAgEC,IAAhE,EAAuE;AAErE;AAAqBC;;AAAd;;AAoBN;;AAfQC,oCAAP,UAAmBC,IAAnB,EAA+BC,UAA/B,EAA0D;AAA3B;AAAAA;AAA2B;;AACxD,UAAMC,UAAU,GAAG,KAAKC,IAAL,CAAUD,UAA7B;AACAF,UAAI,CAACI,CAAL,GAAS,KAAKC,SAAL,CAAeH,UAAU,CAACI,GAAX,CAAe,OAAf,CAAf,EAAwC,CAAxC,CAAT;AACAN,UAAI,CAACO,CAAL,GAAS,KAAKF,SAAL,CAAeH,UAAU,CAACI,GAAX,CAAe,QAAf,CAAf,EAAyC,CAAzC,CAAT;AACAN,UAAI,CAACQ,CAAL,GAAS,KAAKH,SAAL,CAAeH,UAAU,CAACI,GAAX,CAAe,OAAf,CAAf,EAAwC,CAAxC,CAAT;AACD,KALM;;AAYAP,sCAAP,aACC,CADM;;AAGT;AApBO,GAAP,CAAqBF,IAArB;AAsBD;;AAxBDY","names":["CommonMspaceMixin","Base","__extends","class_1","bbox","_recompute","attributes","node","w","length2em","get","h","d","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/mspace.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMspace wrapper mixin for the MmlMspace object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMspance interface\n */\nexport interface CommonMspace extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMspace constructor\n */\nexport type MspaceConstructor = Constructor<CommonMspace>;\n\n/*****************************************************************/\n/**\n * The CommonMspace wrapper mixin for the MmlMspace object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMspaceMixin<T extends WrapperConstructor>(Base: T): MspaceConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      const attributes = this.node.attributes;\n      bbox.w = this.length2em(attributes.get('width'), 0);\n      bbox.h = this.length2em(attributes.get('height'), 0);\n      bbox.d = this.length2em(attributes.get('depth'), 0);\n    }\n\n    /**\n     * No contents, so no need for variant class\n     *\n     * @override\n     */\n    public handleVariant() {\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}