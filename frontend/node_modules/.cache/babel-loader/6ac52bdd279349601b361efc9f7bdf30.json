{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMactionMixin = exports.TooltipData = void 0;\n\nvar string_js_1 = require(\"../../../util/string.js\");\n\nexports.TooltipData = {\n  dx: '.2em',\n  dy: '.1em',\n  postDelay: 600,\n  clearDelay: 100,\n  hoverTimer: new Map(),\n  clearTimer: new Map(),\n  stopTimers: function (node, data) {\n    if (data.clearTimer.has(node)) {\n      clearTimeout(data.clearTimer.get(node));\n      data.clearTimer.delete(node);\n    }\n\n    if (data.hoverTimer.has(node)) {\n      clearTimeout(data.hoverTimer.get(node));\n      data.hoverTimer.delete(node);\n    }\n  }\n};\n\nfunction CommonMactionMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;\n\n      var actions = _this.constructor.actions;\n\n      var action = _this.node.attributes.get('actiontype');\n\n      var _a = __read(actions.get(action) || [function (_node, _data) {}, {}], 2),\n          handler = _a[0],\n          data = _a[1];\n\n      _this.action = handler;\n      _this.data = data;\n\n      _this.getParameters();\n\n      return _this;\n    }\n\n    Object.defineProperty(class_1.prototype, \"selected\", {\n      get: function () {\n        var selection = this.node.attributes.get('selection');\n        var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n        return this.childNodes[i] || this.wrap(this.node.selected);\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    class_1.prototype.getParameters = function () {\n      var offsets = this.node.attributes.get('data-offsets');\n\n      var _a = __read(string_js_1.split(offsets || ''), 2),\n          dx = _a[0],\n          dy = _a[1];\n\n      this.dx = this.length2em(dx || exports.TooltipData.dx);\n      this.dy = this.length2em(dy || exports.TooltipData.dy);\n    };\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      bbox.updateFrom(this.selected.getBBox());\n      this.selected.setChildPWidths(recompute);\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMactionMixin = CommonMactionMixin;","map":{"version":3,"mappings":"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","names":["exports","dx","dy","postDelay","clearDelay","hoverTimer","Map","clearTimer","stopTimers","node","data","has","clearTimeout","get","delete","CommonMactionMixin","Base","__extends","args","actions","_this","constructor","action","attributes","_node","_data","handler","getParameters","Object","class_1","selection","i","Math","max","min","childNodes","length","wrap","selected","offsets","string_js_1","length2em","bbox","recompute","updateFrom","getBBox","setChildPWidths"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/maction.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMaction wrapper mixin for the MmlMaction object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor, AnyWrapperClass} from '../Wrapper.js';\nimport {MmlMaction} from '../../../core/MmlTree/MmlNodes/maction.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n * The types needed to define the actiontypes\n *\n * @template W  The maction wrapper type\n */\nexport type ActionData = {[name: string]: any};\nexport type ActionHandler<W extends AnyWrapper> = (node: W, data?: ActionData) => void;\nexport type ActionPair<W extends AnyWrapper> = [ActionHandler<W>, ActionData];\nexport type ActionMap<W extends AnyWrapper> = Map<string, ActionPair<W>>;\nexport type ActionDef<W extends AnyWrapper> = [string, [ActionHandler<W>, ActionData]];\n\nexport type EventHandler = (event: Event) => void;\n\n/**\n * Data used for tooltip actions\n */\nexport const TooltipData = {\n  dx: '.2em',          // x-offset of tooltip from right side of maction bbox\n  dy: '.1em',          // y-offset of tooltip from bottom of maction bbox\n\n  postDelay: 600,      // milliseconds before tooltip posts\n  clearDelay: 100,     // milliseconds before tooltip is removed\n\n  hoverTimer: new Map<any, number>(),    // timers for posting tooltips\n  clearTimer: new Map<any, number>(),    // timers for removing tooltips\n\n  /*\n   * clear the timers if any are active\n   */\n  stopTimers: (node: any, data: ActionData) => {\n    if (data.clearTimer.has(node)) {\n      clearTimeout(data.clearTimer.get(node));\n      data.clearTimer.delete(node);\n    }\n    if (data.hoverTimer.has(node)) {\n      clearTimeout(data.hoverTimer.get(node));\n      data.hoverTimer.delete(node);\n    }\n  }\n\n};\n\n/*****************************************************************/\n/**\n * The CommonMaction interface\n *\n * @template W  The maction wrapper type\n */\nexport interface CommonMaction<W extends AnyWrapper> extends AnyWrapper {\n  /**\n   * The handler for the specified actiontype\n   */\n  action: ActionHandler<W>;\n  data: ActionData;\n\n  /**\n   * Tooltip offsets\n   */\n  dx: number;\n  dy: number;\n\n  /**\n   * The selected child wrapper\n   */\n  readonly selected: W;\n\n}\n\n/**\n * The CommonMaction class interface\n *\n * @template W  The maction wrapper type\n */\nexport interface CommonMactionClass<W extends AnyWrapper> extends AnyWrapperClass {\n  /**\n   * The valid action types and their handlers\n   */\n  actions: ActionMap<W>;\n}\n\n/**\n * Shorthand for the CommonMaction constructor\n *\n * @template W  The maction wrapper type\n */\nexport type MactionConstructor<W extends AnyWrapper> = Constructor<CommonMaction<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMaction wrapper mixin for the MmlMaction object\n *\n * @template W  The maction wrapper type\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMactionMixin<\n  W extends AnyWrapper,\n  T extends WrapperConstructor\n>(Base: T): MactionConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * The handler for the specified actiontype\n     */\n    public action: ActionHandler<W>;\n    /**\n     * The data for the specified actiontype\n     */\n    public data: ActionData;\n\n    /**\n     * The x-offset for tooltips\n     */\n    public dx: number;\n    /**\n     * The y-offset for tooltips\n     */\n    public dy: number;\n\n    /**\n     * @return {W}  The selected child wrapper\n     */\n    public get selected(): W {\n      const selection = this.node.attributes.get('selection') as number;\n      const i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n      return this.childNodes[i] || this.wrap((this.node as MmlMaction).selected);\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const actions = (this.constructor as CommonMactionClass<W>).actions;\n      const action = this.node.attributes.get('actiontype') as string;\n      const [handler, data] = actions.get(action) || [((_node, _data) => {}) as ActionHandler<W>, {}];\n      this.action = handler;\n      this.data = data;\n      this.getParameters();\n    }\n\n    /**\n     * Look up attribute parameters\n     */\n    public getParameters() {\n      const offsets = this.node.attributes.get('data-offsets') as string;\n      let [dx, dy] = split(offsets || '');\n      this.dx = this.length2em(dx || TooltipData.dx);\n      this.dy = this.length2em(dy || TooltipData.dy);\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.updateFrom(this.selected.getBBox());\n      this.selected.setChildPWidths(recompute);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}