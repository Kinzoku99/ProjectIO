{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MathChoice = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MathChoice = function (_super) {\n  __extends(MathChoice, _super);\n\n  function MathChoice() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MathChoice.prototype, \"kind\", {\n    get: function () {\n      return 'MathChoice';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MathChoice.prototype, \"arity\", {\n    get: function () {\n      return 4;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MathChoice.prototype, \"notParent\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MathChoice.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    var selection = display ? 0 : Math.max(0, Math.min(level, 2)) + 1;\n    var child = this.childNodes[selection] || this.factory.create('mrow');\n    this.parent.replaceChild(child, this);\n    child.setInheritedAttributes(attributes, display, level, prime);\n  };\n\n  MathChoice.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);\n  return MathChoice;\n}(MmlNode_js_1.AbstractMmlBaseNode);\n\nexports.MathChoice = MathChoice;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAUA;AAAgCA;;AAAhC;;AA6CC;;AAjCCC,wBAAWC,oBAAX,EAAW,MAAX,EAAe;SAAf;AACE,aAAO,YAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAQAD,wBAAWC,oBAAX,EAAW,OAAX,EAAgB;SAAhB;AACE,aAAO,CAAP;AACD,KAFe;qBAAA;;AAAA,GAAhB;AAQAD,wBAAWC,oBAAX,EAAW,WAAX,EAAoB;SAApB;AACE,aAAO,IAAP;AACD,KAFmB;qBAAA;;AAAA,GAApB;;AAUOA,gDAAP,UAA8BC,UAA9B,EAAyDC,OAAzD,EAA2EC,KAA3E,EAA0FC,KAA1F,EAAwG;AACtG,QAAMC,SAAS,GAAIH,OAAO,GAAG,CAAH,GAAOI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASL,KAAT,EAAgB,CAAhB,CAAZ,IAAkC,CAAnE;AACA,QAAMM,KAAK,GAAG,KAAKC,UAAL,CAAgBL,SAAhB,KAA8B,KAAKM,OAAL,CAAaC,MAAb,CAAoB,MAApB,CAA5C;AACA,SAAKC,MAAL,CAAYC,YAAZ,CAAyBL,KAAzB,EAAgC,IAAhC;AACAA,SAAK,CAACM,sBAAN,CAA6Bd,UAA7B,EAAyCC,OAAzC,EAAkDC,KAAlD,EAAyDC,KAAzD;AACD,GALM;;AAjCOJ,wBAAQgB,aACjBC,iCAAoBC,QADH,CAAR;AAwChB;AAAC,CA7CD,CAAgCD,gCAAhC;;AAAaE","names":["__extends","Object","MathChoice","attributes","display","level","prime","selection","Math","max","min","child","childNodes","factory","create","parent","replaceChild","setInheritedAttributes","__assign","MmlNode_js_1","defaults","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mathchoice.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MathChoice node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MathChoice node class (subclass of AbstractMmlBaseNode)\n *\n *  This is used by TeX's \\mathchoice macro, but removes itself\n *  during the setInheritedAttributes process\n */\n\nexport class MathChoice extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults\n  };\n\n  /**\n   *  @override\n   */\n  public get kind() {\n    return 'MathChoice';\n  }\n\n  /**\n   * 4 children (display, text, script, and scriptscript styles)\n   * @override\n   */\n  public get arity() {\n    return 4;\n  }\n\n  /**\n   * This element is not considered a MathML container\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n  /**\n   * Replace the MathChoice node with the selected on based on the displaystyle and scriptlevel settings\n   * (so the MathChoice never ends up in a finished MmlNode tree)\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    const selection = (display ? 0 : Math.max(0, Math.min(level, 2)) + 1);\n    const child = this.childNodes[selection] || this.factory.create('mrow');\n    this.parent.replaceChild(child, this);\n    child.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}