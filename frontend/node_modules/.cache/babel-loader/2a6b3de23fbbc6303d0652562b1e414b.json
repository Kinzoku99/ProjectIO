{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMathMixin = void 0;\n\nfunction CommonMathMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.getWrapWidth = function (_i) {\n      return this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm;\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMathMixin = CommonMathMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAgBA,eAAhB,CAA8DC,IAA9D,EAAqE;AAEnE;AAAqBC;;AAAd;;AASN;;AAJQC,qCAAP,UAAoBC,EAApB,EAA8B;AAC5B,aAAQ,KAAKC,MAAL,GAAc,KAAKC,OAAL,GAAeC,CAA7B,GAAiC,KAAKC,OAAL,CAAaC,cAAb,GAA8B,KAAKC,GAAL,CAASC,OAAhF;AACD,KAFM;;AAIT;AATO,GAAP,CAAqBV,IAArB;AAWD;;AAbDW","names":["CommonMathMixin","Base","__extends","class_1","_i","parent","getBBox","w","metrics","containerWidth","jax","pxPerEm","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/math.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMath wrapper mixin for the MmlMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMath interface\n */\nexport interface CommonMath extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMath constructor\n */\nexport type MathConstructor = Constructor<CommonMath>;\n\n/*****************************************************************/\n/**\n *  The CommonMath wrapper mixin for the MmlMath object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMathMixin<T extends WrapperConstructor>(Base: T): MathConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_i: number) {\n      return (this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}