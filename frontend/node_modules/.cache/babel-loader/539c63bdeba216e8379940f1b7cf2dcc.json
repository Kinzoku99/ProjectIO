{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMstyle = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar Attributes_js_1 = require(\"../Attributes.js\");\n\nvar MmlMstyle = function (_super) {\n  __extends(MmlMstyle, _super);\n\n  function MmlMstyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMstyle.prototype, \"kind\", {\n    get: function () {\n      return 'mstyle';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMstyle.prototype, \"notParent\", {\n    get: function () {\n      return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMstyle.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var scriptlevel = this.attributes.getExplicit('scriptlevel');\n\n    if (scriptlevel != null) {\n      scriptlevel = scriptlevel.toString();\n\n      if (scriptlevel.match(/^\\s*[-+]/)) {\n        level += parseInt(scriptlevel);\n      } else {\n        level = parseInt(scriptlevel);\n      }\n\n      prime = false;\n    }\n\n    var displaystyle = this.attributes.getExplicit('displaystyle');\n\n    if (displaystyle != null) {\n      display = displaystyle === true;\n      prime = false;\n    }\n\n    var cramped = this.attributes.getExplicit('data-cramped');\n\n    if (cramped != null) {\n      prime = cramped;\n    }\n\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n  };\n\n  MmlMstyle.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), {\n    scriptlevel: Attributes_js_1.INHERIT,\n    displaystyle: Attributes_js_1.INHERIT,\n    scriptsizemultiplier: 1 / Math.sqrt(2),\n    scriptminsize: '8px',\n    mathbackground: Attributes_js_1.INHERIT,\n    mathcolor: Attributes_js_1.INHERIT,\n    dir: Attributes_js_1.INHERIT,\n    infixlinebreakstyle: 'before'\n  });\n  return MmlMstyle;\n}(MmlNode_js_1.AbstractMmlLayoutNode);\n\nexports.MmlMstyle = MmlMstyle;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AACA;;AAOA;AAA+BA;;AAA/B;;AA4DC;;AAxCCC,wBAAWC,mBAAX,EAAW,MAAX,EAAe;SAAf;AACE,aAAO,QAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAOAD,wBAAWC,mBAAX,EAAW,WAAX,EAAoB;SAApB;AACE,aAAO,KAAKC,UAAL,CAAgB,CAAhB,KAAsB,KAAKA,UAAL,CAAgB,CAAhB,EAAmBA,UAAnB,CAA8BC,MAA9B,KAAyC,CAAtE;AACD,KAFmB;qBAAA;;AAAA,GAApB;;AASUF,oDAAV,UAAsCG,UAAtC,EAAiEC,OAAjE,EAAmFC,KAAnF,EAAkGC,KAAlG,EAAgH;AAC9G,QAAIC,WAAW,GAAG,KAAKJ,UAAL,CAAgBK,WAAhB,CAA4B,aAA5B,CAAlB;;AACA,QAAID,WAAW,IAAI,IAAnB,EAAyB;AACvBA,iBAAW,GAAGA,WAAW,CAACE,QAAZ,EAAd;;AACA,UAAIF,WAAW,CAACG,KAAZ,CAAkB,UAAlB,CAAJ,EAAmC;AACjCL,aAAK,IAAIM,QAAQ,CAACJ,WAAD,CAAjB;AACD,OAFD,MAEO;AACLF,aAAK,GAAGM,QAAQ,CAACJ,WAAD,CAAhB;AACD;;AACDD,WAAK,GAAG,KAAR;AACD;;AACD,QAAIM,YAAY,GAAG,KAAKT,UAAL,CAAgBK,WAAhB,CAA4B,cAA5B,CAAnB;;AACA,QAAII,YAAY,IAAI,IAApB,EAA0B;AACxBR,aAAO,GAAIQ,YAAY,KAAK,IAA5B;AACAN,WAAK,GAAG,KAAR;AACD;;AACD,QAAMO,OAAO,GAAG,KAAKV,UAAL,CAAgBK,WAAhB,CAA4B,cAA5B,CAAhB;;AACA,QAAIK,OAAO,IAAI,IAAf,EAAqB;AACnBP,WAAK,GAAGO,OAAR;AACD;;AACDV,cAAU,GAAG,KAAKW,sBAAL,CAA4BX,UAA5B,EAAwC,KAAKA,UAAL,CAAgBY,gBAAhB,EAAxC,CAAb;AACA,SAAKd,UAAL,CAAgB,CAAhB,EAAmBe,sBAAnB,CAA0Cb,UAA1C,EAAsDC,OAAtD,EAA+DC,KAA/D,EAAsEC,KAAtE;AACD,GAtBS;;AA/BIN,uBAAQiB,sBACjBC,mCAAsBC,QADL,GACa;AACjCZ,eAAW,EAAEa,uBADoB;AAEjCR,gBAAY,EAAEQ,uBAFmB;AAGjCC,wBAAoB,EAAE,IAAIC,IAAI,CAACC,IAAL,CAAU,CAAV,CAHO;AAIjCC,iBAAa,EAAE,KAJkB;AAKjCC,kBAAc,EAAEL,uBALiB;AAMjCM,aAAS,EAAEN,uBANsB;AAOjCO,OAAG,EAAEP,uBAP4B;AAQjCQ,uBAAmB,EAAE;AARY,GADb,CAAR;AAuDhB;AAAC,CA5DD,CAA+BV,kCAA/B;;AAAaW","names":["__extends","Object","MmlMstyle","childNodes","length","attributes","display","level","prime","scriptlevel","getExplicit","toString","match","parseInt","displaystyle","cramped","addInheritedAttributes","getAllAttributes","setInheritedAttributes","__assign","MmlNode_js_1","defaults","Attributes_js_1","scriptsizemultiplier","Math","sqrt","scriptminsize","mathbackground","mathcolor","dir","infixlinebreakstyle","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mstyle.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMstyle node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMstyle node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMstyle extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    scriptlevel: INHERIT,\n    displaystyle: INHERIT,\n    scriptsizemultiplier: 1 / Math.sqrt(2),\n    scriptminsize: '8px',  // should be 8pt, but that is too large\n    mathbackground: INHERIT,\n    mathcolor: INHERIT,\n    dir: INHERIT,\n    infixlinebreakstyle: 'before'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mstyle';\n  }\n\n  /**\n   * @override\n   */\n  public get notParent() {\n    return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;\n  }\n\n  /**\n   * Handle scriptlevel changes, and add mstyle attributes to the ones being inherited.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let scriptlevel = this.attributes.getExplicit('scriptlevel');\n    if (scriptlevel != null) {\n      scriptlevel = scriptlevel.toString();\n      if (scriptlevel.match(/^\\s*[-+]/)) {\n        level += parseInt(scriptlevel);\n      } else {\n        level = parseInt(scriptlevel);\n      }\n      prime = false;  // style change resets tex prime style\n    }\n    let displaystyle = this.attributes.getExplicit('displaystyle') as boolean;\n    if (displaystyle != null) {\n      display = (displaystyle === true);\n      prime = false;  // style change resets tex prime style\n    }\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;  // manual control of tex prime style\n    if (cramped != null) {\n      prime = cramped;\n    }\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}