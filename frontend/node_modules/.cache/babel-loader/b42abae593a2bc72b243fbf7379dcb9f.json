{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMlabeledtr = exports.MmlMtr = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar Attributes_js_1 = require(\"../Attributes.js\");\n\nvar string_js_1 = require(\"../../../util/string.js\");\n\nvar MmlMtr = function (_super) {\n  __extends(MmlMtr, _super);\n\n  function MmlMtr() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMtr.prototype, \"kind\", {\n    get: function () {\n      return 'mtr';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMtr.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMtr.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var child = _d.value;\n\n        if (!child.isKind('mtd')) {\n          this.replaceChild(this.factory.create('mtd'), child).appendChild(child);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var calign = string_js_1.split(this.attributes.get('columnalign'));\n\n    if (this.arity === 1) {\n      calign.unshift(this.parent.attributes.get('side'));\n    }\n\n    attributes = this.addInheritedAttributes(attributes, {\n      rowalign: this.attributes.get('rowalign'),\n      columnalign: 'center'\n    });\n\n    try {\n      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var child = _f.value;\n        attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];\n        child.setInheritedAttributes(attributes, display, level, prime);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  MmlMtr.prototype.verifyChildren = function (options) {\n    var e_3, _a;\n\n    if (this.parent && !this.parent.isKind('mtable')) {\n      this.mError(this.kind + ' can only be a child of an mtable', options, true);\n      return;\n    }\n\n    if (!options['fixMtables']) {\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (!child.isKind('mtd')) {\n            var mtr = this.replaceChild(this.factory.create('mtr'), child);\n            mtr.mError('Children of ' + this.kind + ' must be mtd', options, true);\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    }\n\n    _super.prototype.verifyChildren.call(this, options);\n  };\n\n  MmlMtr.prototype.setTeXclass = function (prev) {\n    var e_4, _a;\n\n    this.getPrevClass(prev);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.setTeXclass(null);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return this;\n  };\n\n  MmlMtr.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    rowalign: Attributes_js_1.INHERIT,\n    columnalign: Attributes_js_1.INHERIT,\n    groupalign: Attributes_js_1.INHERIT\n  });\n  return MmlMtr;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMtr = MmlMtr;\n\nvar MmlMlabeledtr = function (_super) {\n  __extends(MmlMlabeledtr, _super);\n\n  function MmlMlabeledtr() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMlabeledtr.prototype, \"kind\", {\n    get: function () {\n      return 'mlabeledtr';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMlabeledtr.prototype, \"arity\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return MmlMlabeledtr;\n}(MmlMtr);\n\nexports.MmlMlabeledtr = MmlMlabeledtr;","map":{"version":3,"mappings":"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","names":["__extends","Object","MmlMtr","attributes","display","level","prime","childNodes","_d","child","isKind","replaceChild","factory","create","appendChild","calign","string_js_1","get","arity","unshift","parent","addInheritedAttributes","rowalign","columnalign","_f","shift","setInheritedAttributes","options","mError","kind","_c","mtr","_super","verifyChildren","call","prev","getPrevClass","setTeXclass","__assign","MmlNode_js_1","defaults","Attributes_js_1","groupalign","exports","MmlMlabeledtr"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtr.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtr and MmlMlabeledtr nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtr node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtr extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    rowalign: INHERIT,\n    columnalign: INHERIT,\n    groupalign: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtr';\n  }\n\n  /**\n   * <mtr> can contain linebreaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Inherit the mtr attributes\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtd')) {\n        this.replaceChild(this.factory.create('mtd'), child)\n            .appendChild(child);\n      }\n    }\n    const calign = split(this.attributes.get('columnalign') as string);\n    if (this.arity === 1) {\n      calign.unshift(this.parent.attributes.get('side') as string);\n    }\n    attributes = this.addInheritedAttributes(attributes, {\n      rowalign: this.attributes.get('rowalign'),\n      columnalign: 'center'\n    });\n    for (const child of this.childNodes) {\n      attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];\n      child.setInheritedAttributes(attributes, display, level, prime);\n    }\n  }\n\n  /**\n   * Check that parent is mtable and children are mtd\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    if (this.parent && !this.parent.isKind('mtable')) {\n      this.mError(this.kind + ' can only be a child of an mtable', options, true);\n      return;\n    }\n    if (!options['fixMtables']) {\n      for (const child of this.childNodes) {\n        if (!child.isKind('mtd')) {\n          let mtr = this.replaceChild(this.factory.create('mtr'), child) as MmlNode;\n          mtr.mError('Children of ' + this.kind + ' must be mtd', options, true);\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMlabeledtr node class (subclass of MmlMtr)\n */\n\nexport class MmlMlabeledtr extends MmlMtr {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mlabeledtr';\n  }\n\n  /**\n   * <mlabeledtr> requires at least one child (the label)\n   * @override\n   */\n  get arity() {\n    return 1;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}