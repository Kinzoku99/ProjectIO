{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.max = exports.sum = void 0;\n\nfunction sum(A) {\n  return A.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\n\nexports.sum = sum;\n\nfunction max(A) {\n  return A.reduce(function (a, b) {\n    return Math.max(a, b);\n  }, 0);\n}\n\nexports.max = max;","map":{"version":3,"mappings":";;;;;;;AA2BA,SAAgBA,GAAhB,CAAoBC,CAApB,EAA+B;AAC7B,SAAOA,CAAC,CAACC,MAAF,CAAS,UAACC,CAAD,EAAIC,CAAJ,EAAK;AAAK,YAAC,GAAGA,CAAJ;AAAK,GAAxB,EAA0B,CAA1B,CAAP;AACD;;AAFDC;;AAQA,SAAgBC,GAAhB,CAAoBL,CAApB,EAA+B;AAC7B,SAAOA,CAAC,CAACC,MAAF,CAAS,UAACC,CAAD,EAAIC,CAAJ,EAAK;AAAK,eAAI,CAACE,GAAL,CAASH,CAAT,EAAYC,CAAZ;AAAc,GAAjC,EAAmC,CAAnC,CAAP;AACD;;AAFDC","names":["sum","A","reduce","a","b","exports","max"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/util/numeric.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements some numeric utility functions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/**\n * @param {number[]} A  The array to sum\n * @return {number}     The summ of the elements in A\n */\nexport function sum(A: number[]): number {\n  return A.reduce((a, b) => a + b, 0);\n}\n\n/**\n * @param {number[]} A  The array whose maximum entry is sought\n * @return {number}     The largest entry in the array\n */\nexport function max(A: number[]): number {\n  return A.reduce((a, b) => Math.max(a, b), 0);\n}\n"]},"metadata":{},"sourceType":"script"}