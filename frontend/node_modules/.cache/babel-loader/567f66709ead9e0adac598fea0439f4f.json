{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonSemanticsMixin = void 0;\n\nfunction CommonSemanticsMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.computeBBox = function (bbox, _recompute) {\n      if (_recompute === void 0) {\n        _recompute = false;\n      }\n\n      if (this.childNodes.length) {\n        var _a = this.childNodes[0].getBBox(),\n            w = _a.w,\n            h = _a.h,\n            d = _a.d;\n\n        bbox.w = w;\n        bbox.h = h;\n        bbox.d = d;\n      }\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonSemanticsMixin = CommonSemanticsMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAgBA,oBAAhB,CAAmEC,IAAnE,EAA0E;AAExE;AAAqBC;;AAAd;;AAaN;;AARQC,oCAAP,UAAmBC,IAAnB,EAA+BC,UAA/B,EAA0D;AAA3B;AAAAA;AAA2B;;AACxD,UAAI,KAAKC,UAAL,CAAgBC,MAApB,EAA4B;AACpB,iBAAY,KAAKD,UAAL,CAAgB,CAAhB,EAAmBE,OAAnB,EAAZ;AAAA,YAACC,CAAC,OAAF;AAAA,YAAIC,CAAC,OAAL;AAAA,YAAOC,CAAC,OAAR;;AACNP,YAAI,CAACK,CAAL,GAASA,CAAT;AACAL,YAAI,CAACM,CAAL,GAASA,CAAT;AACAN,YAAI,CAACO,CAAL,GAASA,CAAT;AACD;AACF,KAPM;;AAQT;AAbO,GAAP,CAAqBV,IAArB;AAeD;;AAjBDW","names":["CommonSemanticsMixin","Base","__extends","class_1","bbox","_recompute","childNodes","length","getBBox","w","h","d","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/semantics.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonSemantics wrapper mixin for the MmlSemantics object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonSemantics interface\n */\nexport interface CommonSemantics extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonSemantics constructor\n */\nexport type SemanticsConstructor = Constructor<CommonSemantics>;\n\n/*****************************************************************/\n/**\n * The CommonSemantics wrapper mixin for the MmlSemantics object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonSemanticsMixin<T extends WrapperConstructor>(Base: T): SemanticsConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      if (this.childNodes.length) {\n        const {w, h, d} = this.childNodes[0].getBBox();\n        bbox.w = w;\n        bbox.h = h;\n        bbox.d = d;\n      }\n    }\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}