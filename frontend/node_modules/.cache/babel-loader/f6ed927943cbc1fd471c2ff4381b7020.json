{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGscriptbase = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar scriptbase_js_1 = require(\"../../common/Wrappers/scriptbase.js\");\n\nvar SVGscriptbase = function (_super) {\n  __extends(SVGscriptbase, _super);\n\n  function SVGscriptbase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGscriptbase.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    var w = this.getBaseWidth();\n\n    var _a = __read(this.getOffset(), 2),\n        x = _a[0],\n        v = _a[1];\n\n    this.baseChild.toSVG(svg);\n    this.scriptChild.toSVG(svg);\n    this.scriptChild.place(w + x, v);\n  };\n\n  SVGscriptbase.kind = 'scriptbase';\n  return SVGscriptbase;\n}(scriptbase_js_1.CommonScriptbaseMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGscriptbase = SVGscriptbase;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AACA;;AAYA;AACAA;;AADA;;AAuBC;;AATQC,kCAAP,UAAaC,MAAb,EAAsB;AACpB,QAAMC,GAAG,GAAG,KAAKC,eAAL,CAAqBF,MAArB,CAAZ;AACA,QAAMG,CAAC,GAAG,KAAKC,YAAL,EAAV;;AACM,oBAAS,KAAKC,SAAL,EAAT,EAAyB,CAAzB;AAAA,QAACC,CAAC,QAAF;AAAA,QAAIC,CAAC,QAAL;;AACN,SAAKC,SAAL,CAAeC,KAAf,CAAqBR,GAArB;AACA,SAAKS,WAAL,CAAiBD,KAAjB,CAAuBR,GAAvB;AACA,SAAKS,WAAL,CAAiBC,KAAjB,CAAuBR,CAAC,GAAGG,CAA3B,EAA8BC,CAA9B;AACD,GAPM;;AAROR,uBAAO,YAAP;AAiBhB;AAvBA,EACAa,sCAAgFC,uBAAhF,CADA;;AAAaC","names":["__extends","SVGscriptbase","parent","svg","standardSVGnode","w","getBaseWidth","getOffset","x","v","baseChild","toSVG","scriptChild","place","scriptbase_js_1","Wrapper_js_1","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/svg/Wrappers/scriptbase.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the a base class for SVGmsubsup, SVGmunderover\n *                and their relatives.  (Since munderover can become msubsup\n *                when movablelimits is set, munderover needs to be able to\n *                do the same thing as msubsup in some cases.)\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonScriptbaseMixin} from '../../common/Wrappers/scriptbase.js';\n\n/*****************************************************************/\n/**\n * A base class for msup/msub/msubsup and munder/mover/munderover\n * wrapper implementations\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGscriptbase<N, T, D> extends\nCommonScriptbaseMixin<SVGWrapper<any, any, any>, SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The scriptbase wrapper\n   */\n  public static kind = 'scriptbase';\n\n  /**\n   * This gives the common output for msub and msup.  It is overridden\n   * for all the others (msubsup, munder, mover, munderover).\n   *\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    const w = this.getBaseWidth();\n    const [x, v] = this.getOffset();\n    this.baseChild.toSVG(svg);\n    this.scriptChild.toSVG(svg);\n    this.scriptChild.place(w + x, v);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}