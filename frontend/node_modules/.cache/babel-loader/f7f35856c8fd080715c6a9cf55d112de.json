{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMrootMixin = void 0;\n\nfunction CommonMrootMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Object.defineProperty(class_1.prototype, \"surd\", {\n      get: function () {\n        return 2;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_1.prototype, \"root\", {\n      get: function () {\n        return 1;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    class_1.prototype.combineRootBBox = function (BBOX, sbox, H) {\n      var bbox = this.childNodes[this.root].getBBox();\n      var h = this.getRootDimens(sbox, H)[1];\n      BBOX.combine(bbox, 0, h);\n    };\n\n    class_1.prototype.getRootDimens = function (sbox, H) {\n      var surd = this.childNodes[this.surd];\n      var bbox = this.childNodes[this.root].getBBox();\n      var offset = (surd.size < 0 ? .5 : .6) * sbox.w;\n      var w = bbox.w,\n          rscale = bbox.rscale;\n      var W = Math.max(w, offset / rscale);\n      var dx = Math.max(0, W - w);\n      var h = this.rootHeight(bbox, sbox, surd.size, H);\n      var x = W * rscale - offset;\n      return [x, h, dx];\n    };\n\n    class_1.prototype.rootHeight = function (rbox, sbox, size, H) {\n      var h = sbox.h + sbox.d;\n      var b = (size < 0 ? 1.9 : .55 * h) - (h - H);\n      return b + Math.max(0, rbox.d * rbox.rscale);\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMrootMixin = CommonMrootMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAgBA,gBAAhB,CAA6DC,IAA7D,EAAoE;AAElE;AAAqBC;;AAAd;;AAqDN;;AAhDCC,0BAAIC,iBAAJ,EAAI,MAAJ,EAAQ;WAAR;AACE,eAAO,CAAP;AACD,OAFO;uBAAA;;AAAA,KAAR;AAOAD,0BAAIC,iBAAJ,EAAI,MAAJ,EAAQ;WAAR;AACE,eAAO,CAAP;AACD,OAFO;uBAAA;;AAAA,KAAR;;AAOOA,wCAAP,UAAuBC,IAAvB,EAAmCC,IAAnC,EAA+CC,CAA/C,EAAwD;AACtD,UAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgB,KAAKC,IAArB,EAA2BC,OAA3B,EAAb;AACA,UAAMC,CAAC,GAAG,KAAKC,aAAL,CAAmBP,IAAnB,EAAyBC,CAAzB,EAA4B,CAA5B,CAAV;AACAF,UAAI,CAACS,OAAL,CAAaN,IAAb,EAAmB,CAAnB,EAAsBI,CAAtB;AACD,KAJM;;AASAR,sCAAP,UAAqBE,IAArB,EAAiCC,CAAjC,EAA0C;AACxC,UAAMQ,IAAI,GAAG,KAAKN,UAAL,CAAgB,KAAKM,IAArB,CAAb;AACA,UAAMP,IAAI,GAAG,KAAKC,UAAL,CAAgB,KAAKC,IAArB,EAA2BC,OAA3B,EAAb;AACA,UAAMK,MAAM,GAAG,CAACD,IAAI,CAACE,IAAL,GAAY,CAAZ,GAAgB,EAAhB,GAAqB,EAAtB,IAA4BX,IAAI,CAACY,CAAhD;AACO,WAAC,GAAYV,IAAI,EAAjB;AAAA,UAAGW,MAAM,GAAIX,IAAI,OAAjB;AACP,UAAMY,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASJ,CAAT,EAAYF,MAAM,GAAGG,MAArB,CAAV;AACA,UAAMI,EAAE,GAAGF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,CAAC,GAAGF,CAAhB,CAAX;AACA,UAAMN,CAAC,GAAG,KAAKY,UAAL,CAAgBhB,IAAhB,EAAsBF,IAAtB,EAA4BS,IAAI,CAACE,IAAjC,EAAuCV,CAAvC,CAAV;AACA,UAAMkB,CAAC,GAAGL,CAAC,GAAGD,MAAJ,GAAaH,MAAvB;AACA,aAAO,CAACS,CAAD,EAAIb,CAAJ,EAAOW,EAAP,CAAP;AACD,KAVM;;AAmBAnB,mCAAP,UAAkBsB,IAAlB,EAA8BpB,IAA9B,EAA0CW,IAA1C,EAAwDV,CAAxD,EAAiE;AAC/D,UAAMK,CAAC,GAAGN,IAAI,CAACM,CAAL,GAASN,IAAI,CAACqB,CAAxB;AACA,UAAMC,CAAC,GAAG,CAACX,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,MAAML,CAAxB,KAA8BA,CAAC,GAAGL,CAAlC,CAAV;AACA,aAAOqB,CAAC,GAAGP,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYI,IAAI,CAACC,CAAL,GAASD,IAAI,CAACP,MAA1B,CAAX;AACD,KAJM;;AAMT;AArDO,GAAP,CAAqBlB,IAArB;AAuDD;;AAzDD4B","names":["CommonMrootMixin","Base","__extends","Object","class_1","BBOX","sbox","H","bbox","childNodes","root","getBBox","h","getRootDimens","combine","surd","offset","size","w","rscale","W","Math","max","dx","rootHeight","x","rbox","d","b","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/mroot.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMroot wrapper mixin for the MmlMroot object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Constructor} from '../../common/Wrapper.js';\nimport {CommonMsqrt, MsqrtConstructor} from './msqrt.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMroot interface\n */\nexport interface CommonMroot extends CommonMsqrt {\n}\n\n/**\n * Shorthand for the CommonMroot constructor\n */\nexport type MrootConstructor = Constructor<CommonMroot>;\n\n/*****************************************************************/\n/**\n * The CommonMroot wrapper mixin for the MmlMroot object (extends CommonMsqrt)\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMrootMixin<T extends MsqrtConstructor>(Base: T): MrootConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get surd() {\n      return 2;\n    }\n\n    /**\n     * @override\n     */\n    get root(): number {\n      return 1;\n    }\n\n    /**\n     * @override\n     */\n    public combineRootBBox(BBOX: BBox, sbox: BBox, H: number) {\n      const bbox = this.childNodes[this.root].getBBox();\n      const h = this.getRootDimens(sbox, H)[1];\n      BBOX.combine(bbox, 0, h);\n    }\n\n    /**\n     * @override\n     */\n    public getRootDimens(sbox: BBox, H: number) {\n      const surd = this.childNodes[this.surd] as CommonMo;\n      const bbox = this.childNodes[this.root].getBBox();\n      const offset = (surd.size < 0 ? .5 : .6) * sbox.w;\n      const {w, rscale} = bbox;\n      const W = Math.max(w, offset / rscale);\n      const dx = Math.max(0, W - w);\n      const h = this.rootHeight(bbox, sbox, surd.size, H);\n      const x = W * rscale - offset;\n      return [x, h, dx];\n    }\n\n    /**\n     * @param {BBox} rbox      The bbox of the root\n     * @param {BBox} sbox      The bbox of the surd\n     * @param {number} size    The size of the surd\n     * @param {number} H       The height of the root as a whole\n     * @return {number}        The height of the root within the surd\n     */\n    public rootHeight(rbox: BBox, sbox: BBox, size: number, H: number): number {\n      const h = sbox.h + sbox.d;\n      const b = (size < 0 ? 1.9 : .55 * h) - (h - H);\n      return b + Math.max(0, rbox.d * rbox.rscale);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}