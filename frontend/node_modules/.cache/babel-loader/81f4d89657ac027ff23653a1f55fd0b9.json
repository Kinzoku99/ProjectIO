{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mathjax = void 0;\n\nvar HandlerList_js_1 = require(\"./core/HandlerList.js\");\n\nvar Retries_js_1 = require(\"./util/Retries.js\");\n\nexports.mathjax = {\n  version: '3.2.0',\n  handlers: new HandlerList_js_1.HandlerList(),\n  document: function (document, options) {\n    return exports.mathjax.handlers.document(document, options);\n  },\n  handleRetriesFor: Retries_js_1.handleRetriesFor,\n  retryAfter: Retries_js_1.retryAfter,\n  asyncLoad: null\n};","map":{"version":3,"mappings":";;;;;;;AAuBA;;AACA;;AAQaA,kBAAU;AAIrBC,SAAO,EAAE,OAJY;AASrBC,UAAQ,EAAE,IAAIC,4BAAJ,EATW;AAkBrBC,UAAQ,EAAE,UAAUA,QAAV,EAAyBC,OAAzB,EAA4C;AACpD,WAAOL,gBAAQE,QAAR,CAAiBE,QAAjB,CAA0BA,QAA1B,EAAoCC,OAApC,CAAP;AACD,GApBoB;AAyBrBC,kBAAgB,EAAEC,6BAzBG;AA0BrBC,YAAU,EAAED,uBA1BS;AA+BrBE,WAAS,EAAE;AA/BU,CAAV","names":["exports","version","handlers","HandlerList_js_1","document","options","handleRetriesFor","Retries_js_1","retryAfter","asyncLoad"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/mathjax.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The main MathJax global object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {HandlerList} from './core/HandlerList.js';\nimport {handleRetriesFor, retryAfter} from './util/Retries.js';\nimport {OptionList} from './util/Options.js';\nimport {MathDocument} from './core/MathDocument.js';\n\n/*****************************************************************/\n/**\n * The main MathJax global object\n */\nexport const mathjax = {\n  /**\n   *  The MathJax version number\n   */\n  version: '3.2.0',\n\n  /**\n   *  The list of registers document handlers\n   */\n  handlers: new HandlerList<any, any, any>(),\n\n  /**\n   * Creates a MathDocument using a registered handler that knows how to handl it\n   *\n   * @param {any} document        The document to handle\n   * @param {OptionList} options   The options to use for the document (e.g., input and output jax)\n   * @return {MathDocument}       The MathDocument to handle the document\n   */\n  document: function (document: any, options: OptionList): MathDocument<any, any, any> {\n    return mathjax.handlers.document(document, options);\n  },\n\n  /**\n   * The functions for handling retries if a file must be loaded dynamically\n   */\n  handleRetriesFor: handleRetriesFor,\n  retryAfter: retryAfter,\n\n  /**\n   * A function for loading external files (can be changed for node/browser use)\n   */\n  asyncLoad: null as ((file: string) => any),\n\n};\n"]},"metadata":{},"sourceType":"script"}