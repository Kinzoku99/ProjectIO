{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMfracMixin = void 0;\n\nfunction CommonMfracMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;\n\n      _this.bevel = null;\n      _this.pad = _this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace;\n\n      if (_this.node.attributes.get('bevelled')) {\n        var H = _this.getBevelData(_this.isDisplay()).H;\n\n        var bevel = _this.bevel = _this.createMo('/');\n\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(1);\n        bevel.getStretchedVariant([H], true);\n      }\n\n      return _this;\n    }\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      bbox.empty();\n\n      var _a = this.node.attributes.getList('linethickness', 'bevelled'),\n          linethickness = _a.linethickness,\n          bevelled = _a.bevelled;\n\n      var display = this.isDisplay();\n      var w = null;\n\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        var thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n\n        w += bbox.w;\n      }\n\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    };\n\n    class_1.prototype.getFractionBBox = function (bbox, display, t) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var tex = this.font.params;\n      var a = tex.axis_height;\n\n      var _a = this.getTUV(display, t),\n          T = _a.T,\n          u = _a.u,\n          v = _a.v;\n\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    };\n\n    class_1.prototype.getTUV = function (display, t) {\n      var tex = this.font.params;\n      var a = tex.axis_height;\n      var T = (display ? 3.5 : 1.5) * t;\n      return {\n        T: (display ? 3.5 : 1.5) * t,\n        u: (display ? tex.num1 : tex.num2) - a - T,\n        v: (display ? tex.denom1 : tex.denom2) + a - T\n      };\n    };\n\n    class_1.prototype.getAtopBBox = function (bbox, display) {\n      var _a = this.getUVQ(display),\n          u = _a.u,\n          v = _a.v,\n          nbox = _a.nbox,\n          dbox = _a.dbox;\n\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    };\n\n    class_1.prototype.getUVQ = function (display) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var tex = this.font.params;\n\n      var _a = __read(display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2], 2),\n          u = _a[0],\n          v = _a[1];\n\n      var p = (display ? 7 : 3) * tex.rule_thickness;\n      var q = u - nbox.d * nbox.scale - (dbox.h * dbox.scale - v);\n\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n\n      return {\n        u: u,\n        v: v,\n        q: q,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n\n    class_1.prototype.getBevelledBBox = function (bbox, display) {\n      var _a = this.getBevelData(display),\n          u = _a.u,\n          v = _a.v,\n          delta = _a.delta,\n          nbox = _a.nbox,\n          dbox = _a.dbox;\n\n      var lbox = this.bevel.getBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    };\n\n    class_1.prototype.getBevelData = function (display) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var delta = display ? .4 : .15;\n      var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      var a = this.font.params.axis_height;\n      var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {\n        H: H,\n        delta: delta,\n        u: u,\n        v: v,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n\n    class_1.prototype.canStretch = function (_direction) {\n      return false;\n    };\n\n    class_1.prototype.isDisplay = function () {\n      var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'),\n          displaystyle = _a.displaystyle,\n          scriptlevel = _a.scriptlevel;\n\n      return displaystyle && scriptlevel === 0;\n    };\n\n    class_1.prototype.getWrapWidth = function (i) {\n      var attributes = this.node.attributes;\n\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getBBox().w;\n      }\n\n      var w = this.getBBox().w;\n      var thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) - 2 * this.pad;\n    };\n\n    class_1.prototype.getChildAlign = function (i) {\n      var attributes = this.node.attributes;\n      return attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]);\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMfracMixin = CommonMfracMixin;","map":{"version":3,"mappings":"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","names":["CommonMfracMixin","Base","__extends","args","_this","pad","node","getProperty","font","params","nulldelimiterspace","attributes","get","getBevelData","isDisplay","H","bevel","createMo","set","canStretch","getStretchedVariant","class_1","bbox","recompute","empty","getList","linethickness","bevelled","display","w","getBevelledBBox","thickness","length2em","String","getAtopBBox","getFractionBBox","clean","setChildPWidths","t","nbox","childNodes","getBBox","dbox","tex","a","axis_height","getTUV","T","u","v","combine","Math","max","d","rscale","h","num1","num2","denom1","denom2","getUVQ","num3","p","rule_thickness","q","scale","delta","lbox","_direction","displaystyle","scriptlevel","i","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/mfrac.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMfrac interface\n */\nexport interface CommonMfrac extends AnyWrapper {\n  /**\n   * @param {BBox} bbox        The buonding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   */\n  getFractionBBox(bbox: BBox, display: boolean, t: number): void;\n\n  /**\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   * @return {Object}          The expanded rule thickness (T), and baseline offsets\n   *                             for numerator and denomunator (u and v)\n   */\n  getTUV(display: boolean, t: number): {T: number, u: number, v: number};\n\n  /**\n   * @param {BBox} bbox        The bounding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getAtopBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for diplay-mode fractions\n   * @return {Object}\n   *    The vertical offsets of the numerator (u), the denominator (v),\n   *    the separation between the two, and the bboxes themselves.\n   */\n  getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @param {BBox} bbox        The boundng box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getBevelledBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for display-style fractions\n   * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n   *                             vertical offsets (u and v) of the parts, and\n   *                             bounding boxes of the parts.\n   */\n  getBevelData(display: boolean): {H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @return {boolean}   True if in display mode, false otherwise\n   */\n  isDisplay(): boolean;\n}\n\n/**\n * Shorthand for the CommonMfrac constructor\n */\nexport type MfracConstructor = Constructor<CommonMfrac>;\n\n/*****************************************************************/\n/**\n * The CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMfracMixin<T extends WrapperConstructor>(Base: T): MfracConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Wrapper for <mo> to use for bevelled fraction\n     */\n    public bevel: CommonMo = null;\n\n    /**\n     * Padding around fractions\n     */\n    public pad: number;\n\n    /************************************************/\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.pad = (this.node.getProperty('withDelims') as boolean ? 0 : this.font.params.nulldelimiterspace);\n      //\n      //  create internal bevel mo element\n      //\n      if (this.node.attributes.get('bevelled')) {\n        const {H} = this.getBevelData(this.isDisplay());\n        const bevel = this.bevel = this.createMo('/') as CommonMo;\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(DIRECTION.Vertical);\n        bevel.getStretchedVariant([H], true);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.empty();\n      const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n      const display = this.isDisplay();\n      let w = null as (number | null);\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        const thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n        w += bbox.w;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The buonding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     */\n    public getFractionBBox(bbox: BBox, display: boolean, t: number) {\n      const nbox = this.childNodes[0].getBBox();\n      const dbox = this.childNodes[1].getBBox();\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const {T, u, v} = this.getTUV(display, t);\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    }\n\n    /**\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     * @return {Object}          The expanded rule thickness (T), and baseline offsets\n     *                             for numerator and denomunator (u and v)\n     */\n    public getTUV(display: boolean, t: number): {T: number, u: number, v: number} {\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const T = (display ? 3.5 : 1.5) * t;\n      return {T: (display ? 3.5 : 1.5) * t,\n              u: (display ? tex.num1 : tex.num2) - a - T,\n              v: (display ? tex.denom1 : tex.denom2) + a - T};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The bounding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getAtopBBox(bbox: BBox, display: boolean) {\n      const {u, v, nbox, dbox} = this.getUVQ(display);\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    }\n\n    /**\n     * @param {boolean} display  True for diplay-mode fractions\n     * @return {Object}\n     *    The vertical offsets of the numerator (u), the denominator (v),\n     *    the separation between the two, and the bboxes themselves.\n     */\n    public getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox} {\n      const nbox = this.childNodes[0].getBBox() as BBox;\n      const dbox = this.childNodes[1].getBBox() as BBox;\n      const tex = this.font.params;\n      //\n      //  Initial offsets (u, v)\n      //  Minimum separation (p)\n      //  Actual separation with initial positions (q)\n      //\n      let [u, v] = (display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]);\n      let p = (display ? 7 : 3) * tex.rule_thickness;\n      let q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);\n      //\n      //  If actual separation is less than minimum, move them farther apart\n      //\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n      return {u, v, q, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The boundng box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getBevelledBBox(bbox: BBox, display: boolean) {\n      const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n      const lbox = this.bevel.getBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    }\n\n    /**\n     * @param {boolean} display  True for display-style fractions\n     * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n     *                             vertical offsets (u and v) of the parts, and\n     *                             bounding boxes of the parts.\n     */\n    public getBevelData(display: boolean): {\n      H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox\n    } {\n      const nbox = this.childNodes[0].getBBox() as BBox;\n      const dbox = this.childNodes[1].getBBox() as BBox;\n      const delta = (display ? .4 : .15);\n      const H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      const a = this.font.params.axis_height;\n      const u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      const v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {H, delta, u, v, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @override\n     */\n    public canStretch(_direction: DIRECTION) {\n      return false;\n    }\n\n    /**\n     * @return {boolean}   True if in display mode, false otherwise\n     */\n    public isDisplay(): boolean {\n      const {displaystyle, scriptlevel} = this.node.attributes.getList('displaystyle', 'scriptlevel');\n      return displaystyle && scriptlevel === 0;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(i: number) {\n      const attributes = this.node.attributes;\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getBBox().w;\n      }\n      const w = this.getBBox().w;\n      const thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) -  2 * this.pad;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(i: number) {\n      const attributes = this.node.attributes;\n      return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]) as string);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}