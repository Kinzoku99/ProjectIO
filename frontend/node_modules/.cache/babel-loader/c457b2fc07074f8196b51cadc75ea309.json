{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMtable = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar string_js_1 = require(\"../../../util/string.js\");\n\nvar MmlMtable = function (_super) {\n  __extends(MmlMtable, _super);\n\n  function MmlMtable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.properties = {\n      useHeight: true\n    };\n    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n\n  Object.defineProperty(MmlMtable.prototype, \"kind\", {\n    get: function () {\n      return 'mtable';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMtable.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    var e_1, _a;\n\n    try {\n      for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {\n        var name_1 = indentAttributes_1_1.value;\n\n        if (attributes[name_1]) {\n          this.attributes.setInherited(name_1, attributes[name_1][1]);\n        }\n\n        if (this.attributes.getExplicit(name_1) !== undefined) {\n          delete this.attributes.getAllAttributes()[name_1];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n  };\n\n  MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {\n    var e_2, _a, e_3, _b;\n\n    try {\n      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var child = _d.value;\n\n        if (!child.isKind('mtr')) {\n          this.replaceChild(this.factory.create('mtr'), child).appendChild(child);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    level = this.getProperty('scriptlevel') || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    var cramped = this.attributes.getExplicit('data-cramped');\n    var ralign = string_js_1.split(this.attributes.get('rowalign'));\n\n    try {\n      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var child = _f.value;\n        attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n        child.setInheritedAttributes(attributes, display, level, !!cramped);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  MmlMtable.prototype.verifyChildren = function (options) {\n    var e_4, _a;\n\n    if (!options['fixMtables']) {\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (!child.isKind('mtr')) {\n            this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);\n          }\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    }\n\n    _super.prototype.verifyChildren.call(this, options);\n  };\n\n  MmlMtable.prototype.setTeXclass = function (prev) {\n    var e_5, _a;\n\n    this.getPrevClass(prev);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.setTeXclass(null);\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return this;\n  };\n\n  MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  });\n  return MmlMtable;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMtable = MmlMtable;","map":{"version":3,"mappings":"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","names":["__extends","_this","useHeight","MmlNode_js_1","ORD","Object","MmlMtable","attributes","display","level","prime","indentAttributes_1_1","name_1","setInherited","getExplicit","undefined","getAllAttributes","_super","setInheritedAttributes","call","_prime","childNodes","_d","child","isKind","replaceChild","factory","create","appendChild","getProperty","getDefault","addInheritedAttributes","columnalign","get","rowalign","cramped","ralign","string_js_1","_f","shift","options","_c","mError","kind","verifyChildren","prev","getPrevClass","setTeXclass","__assign","defaults","align","groupalign","alignmentscope","columnwidth","width","rowspacing","columnspacing","rowlines","columnlines","frame","framespacing","equalrows","equalcolumns","displaystyle","side","minlabelspacing","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtable.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtable node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS, indentAttributes} from '../MmlNode.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtable node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtable extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    useHeight: true\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtable';\n  }\n\n  /**\n   * Linebreaks are allowed in tables\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    //\n    // Force inheritance of shift and align values (since they are needed to output tables with labels)\n    //   but make sure they are not given explicitly on the <mtable> tag.\n    //\n    for (const name of indentAttributes) {\n      if (attributes[name]) {\n        this.attributes.setInherited(name, attributes[name][1]);\n      }\n      if (this.attributes.getExplicit(name) !== undefined) {\n        delete (this.attributes.getAllAttributes())[name];\n      }\n    }\n    super.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n  /**\n   * Make sure all children are mtr or mlabeledtr nodes\n   * Inherit the table attributes, and set the display attribute based on the table's displaystyle attribute\n   * Reset the prime value to false\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, _prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtr')) {\n        this.replaceChild(this.factory.create('mtr'), child)\n          .appendChild(child);\n      }\n    }\n    level = this.getProperty('scriptlevel') as number || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;\n    const ralign = split(this.attributes.get('rowalign') as string);\n    for (const child of this.childNodes) {\n      attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n      child.setInheritedAttributes(attributes, display, level, !!cramped);\n    }\n  }\n\n  /**\n   * Check that children are mtr or mlabeledtr\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    if (!options['fixMtables']) {\n      for (const child of this.childNodes) {\n        if (!child.isKind('mtr')) {\n          this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}