{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmmultiscripts = void 0;\n\nvar msubsup_js_1 = require(\"./msubsup.js\");\n\nvar mmultiscripts_js_1 = require(\"../../common/Wrappers/mmultiscripts.js\");\n\nvar mmultiscripts_js_2 = require(\"../../../core/MmlTree/MmlNodes/mmultiscripts.js\");\n\nvar SVGmmultiscripts = function (_super) {\n  __extends(SVGmmultiscripts, _super);\n\n  function SVGmmultiscripts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmmultiscripts.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    var data = this.scriptData;\n    var sub = this.combinePrePost(data.sub, data.psub);\n    var sup = this.combinePrePost(data.sup, data.psup);\n\n    var _a = __read(this.getUVQ(sub, sup), 2),\n        u = _a[0],\n        v = _a[1];\n\n    var x = 0;\n\n    if (data.numPrescripts) {\n      x = this.addScripts(.05, u, v, true, this.firstPrescript, data.numPrescripts);\n    }\n\n    var base = this.baseChild;\n    base.toSVG(svg);\n    base.place(x, 0);\n    x += base.getBBox().w;\n\n    if (data.numScripts) {\n      this.addScripts(x, u, v, false, 1, data.numScripts);\n    }\n  };\n\n  SVGmmultiscripts.prototype.addScripts = function (x, u, v, isPre, i, n) {\n    var adaptor = this.adaptor;\n    var supRow = adaptor.append(this.element, this.svg('g'));\n    var subRow = adaptor.append(this.element, this.svg('g'));\n    this.place(x, u, supRow);\n    this.place(x, v, subRow);\n    var m = i + 2 * n;\n    var dx = 0;\n\n    while (i < m) {\n      var _a = __read([this.childNodes[i++], this.childNodes[i++]], 2),\n          sub = _a[0],\n          sup = _a[1];\n\n      var _b = __read([sub.getBBox(), sup.getBBox()], 2),\n          subbox = _b[0],\n          supbox = _b[1];\n\n      var _c = __read([subbox.rscale, supbox.rscale], 2),\n          subr = _c[0],\n          supr = _c[1];\n\n      var w = Math.max(subbox.w * subr, supbox.w * supr);\n      sub.toSVG(subRow);\n      sup.toSVG(supRow);\n      sub.place(dx + (isPre ? w - subbox.w * subr : 0), 0);\n      sup.place(dx + (isPre ? w - supbox.w * supr : 0), 0);\n      dx += w;\n    }\n\n    return x + dx;\n  };\n\n  SVGmmultiscripts.kind = mmultiscripts_js_2.MmlMmultiscripts.prototype.kind;\n  return SVGmmultiscripts;\n}(mmultiscripts_js_1.CommonMmultiscriptsMixin(msubsup_js_1.SVGmsubsup));\n\nexports.SVGmmultiscripts = SVGmmultiscripts;","map":{"version":3,"mappings":"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","names":["__extends","SVGmmultiscripts","parent","svg","standardSVGnode","data","scriptData","sub","combinePrePost","psub","sup","psup","getUVQ","u","v","x","numPrescripts","addScripts","firstPrescript","base","baseChild","toSVG","place","getBBox","w","numScripts","isPre","i","n","adaptor","supRow","append","element","subRow","m","dx","childNodes","subbox","supbox","rscale","subr","supr","Math","max","mmultiscripts_js_2","prototype","kind","mmultiscripts_js_1","msubsup_js_1","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/svg/Wrappers/mmultiscripts.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, Constructor} from '../Wrapper.js';\nimport {SVGmsubsup} from './msubsup.js';\nimport {CommonMmultiscriptsMixin} from '../../common/Wrappers/mmultiscripts.js';\nimport {MmlMmultiscripts} from '../../../core/MmlTree/MmlNodes/mmultiscripts.js';\n\n/*****************************************************************/\n/**\n * The SVGmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmmultiscripts<N, T, D> extends\nCommonMmultiscriptsMixin<SVGWrapper<any, any, any>, Constructor<SVGmsubsup<any, any, any>>>(SVGmsubsup) {\n\n  /**\n   * The mmultiscripts wrapper\n   */\n  public static kind = MmlMmultiscripts.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    const data = this.scriptData;\n    //\n    //  Combine the bounding boxes of the pre- and post-scripts,\n    //  and get the resulting baseline offsets\n    //\n    const sub = this.combinePrePost(data.sub, data.psub);\n    const sup = this.combinePrePost(data.sup, data.psup);\n    const [u, v] = this.getUVQ(sub, sup);\n    //\n    //  Place the pre-scripts, then the base, then the post-scripts\n    //\n    let x = 0;  // scriptspace\n    if (data.numPrescripts) {\n      x = this.addScripts(.05, u, v, true, this.firstPrescript, data.numPrescripts);\n    }\n    const base = this.baseChild;\n    base.toSVG(svg);\n    base.place(x, 0);\n    x += base.getBBox().w;\n    if (data.numScripts) {\n      this.addScripts(x, u, v, false, 1, data.numScripts);\n    }\n  }\n\n  /**\n   * Create a table with the super and subscripts properly separated and aligned.\n   *\n   * @param {number} x       The x offset of the scripts\n   * @param {number} u       The baseline offset for the superscripts\n   * @param {number} v       The baseline offset for the subscripts\n   * @param {boolean} isPre  True for prescripts, false for scripts\n   * @param {number} i       The starting index for the scripts\n   * @param {number} n       The number of sub/super-scripts\n   * @return {number}        The right-hand offset of the scripts\n   */\n  protected addScripts(x: number, u: number, v: number, isPre: boolean, i: number, n: number): number {\n    const adaptor = this.adaptor;\n    const supRow = adaptor.append(this.element, this.svg('g'));\n    const subRow = adaptor.append(this.element, this.svg('g'));\n    this.place(x, u, supRow);\n    this.place(x, v, subRow);\n    let m = i + 2 * n;\n    let dx = 0;\n    while (i < m) {\n      const [sub, sup] = [this.childNodes[i++], this.childNodes[i++]];\n      const [subbox, supbox] = [sub.getBBox(), sup.getBBox()];\n      const [subr, supr] = [subbox.rscale, supbox.rscale];\n      const w = Math.max(subbox.w * subr, supbox.w * supr);\n      sub.toSVG(subRow);\n      sup.toSVG(supRow);\n      sub.place(dx + (isPre ? w - subbox.w * subr : 0), 0);\n      sup.place(dx + (isPre ? w - supbox.w * supr : 0), 0);\n      dx += w;\n    }\n    return x + dx;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}