{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMphantom = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMphantom = function (_super) {\n  __extends(MmlMphantom, _super);\n\n  function MmlMphantom() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n\n  Object.defineProperty(MmlMphantom.prototype, \"kind\", {\n    get: function () {\n      return 'mphantom';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMphantom.defaults = __assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults);\n  return MmlMphantom;\n}(MmlNode_js_1.AbstractMmlLayoutNode);\n\nexports.MmlMphantom = MmlMphantom;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAOA;AAAiCA;;AAAjC;AAAA;;AAYYC,qBAAWC,sBAASC,GAApB;;AASX;;AAJCC,wBAAWC,qBAAX,EAAW,MAAX,EAAe;SAAf;AACE,aAAO,UAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAZcA,yBAAQC,aACjBJ,mCAAsBK,QADL,CAAR;AAgBhB;AAAC,CArBD,CAAiCL,kCAAjC;;AAAaM","names":["__extends","_this","MmlNode_js_1","ORD","Object","MmlMphantom","__assign","defaults","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mphantom.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMphantom node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMphantom node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMphantom extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mphantom';\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}