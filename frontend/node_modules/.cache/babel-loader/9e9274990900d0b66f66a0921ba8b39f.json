{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlFactory = void 0;\n\nvar NodeFactory_js_1 = require(\"../Tree/NodeFactory.js\");\n\nvar MML_js_1 = require(\"./MML.js\");\n\nvar MmlFactory = function (_super) {\n  __extends(MmlFactory, _super);\n\n  function MmlFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlFactory.prototype, \"MML\", {\n    get: function () {\n      return this.node;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlFactory.defaultNodes = MML_js_1.MML;\n  return MmlFactory;\n}(NodeFactory_js_1.AbstractNodeFactory);\n\nexports.MmlFactory = MmlFactory;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;;AAOA;AAAgCA;;AAAhC;;AAeC;;AAJCC,wBAAIC,oBAAJ,EAAI,KAAJ,EAAO;SAAP;AACE,aAAO,KAAKC,IAAZ;AACD,KAFM;qBAAA;;AAAA,GAAP;AANcD,4BAAeE,YAAf;AAUhB;AAAC,CAfD,CAAgCC,oCAAhC;;AAAaC","names":["__extends","Object","MmlFactory","node","MML_js_1","NodeFactory_js_1","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/core/MmlTree/MmlFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlFactory to create Mml Nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractNodeFactory} from '../Tree/NodeFactory.js';\nimport {MmlNode, MmlNodeClass} from './MmlNode.js';\nimport {MML} from './MML.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlFactory (subclass of NodeFactory)\n */\n\nexport class MmlFactory extends AbstractNodeFactory<MmlNode, MmlNodeClass> {\n\n  /**\n   * The default node-creation functions\n   */\n  public static defaultNodes = MML;\n\n  /**\n   * @return {Object}  The list of node-creation functions (similar to the\n   *                   MML object from MathJax v2).\n   */\n  get MML(): Object {\n    return this.node;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}