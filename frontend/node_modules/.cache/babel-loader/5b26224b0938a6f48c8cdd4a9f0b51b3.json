{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmroot = void 0;\n\nvar msqrt_js_1 = require(\"./msqrt.js\");\n\nvar mroot_js_1 = require(\"../../common/Wrappers/mroot.js\");\n\nvar mroot_js_2 = require(\"../../../core/MmlTree/MmlNodes/mroot.js\");\n\nvar SVGmroot = function (_super) {\n  __extends(SVGmroot, _super);\n\n  function SVGmroot() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmroot.prototype.addRoot = function (ROOT, root, sbox, H) {\n    root.toSVG(ROOT);\n\n    var _a = __read(this.getRootDimens(sbox, H), 3),\n        x = _a[0],\n        h = _a[1],\n        dx = _a[2];\n\n    var bbox = root.getBBox();\n    root.place(dx * bbox.rscale, h);\n    this.dx = x;\n  };\n\n  SVGmroot.kind = mroot_js_2.MmlMroot.prototype.kind;\n  return SVGmroot;\n}(mroot_js_1.CommonMrootMixin(msqrt_js_1.SVGmsqrt));\n\nexports.SVGmroot = SVGmroot;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AACA;;AAEA;;AAUA;AAAuCA;;AAAvC;;AAkBC;;AARWC,+BAAV,UAAkBC,IAAlB,EAA2BC,IAA3B,EAAsDC,IAAtD,EAAkEC,CAAlE,EAA2E;AACzEF,QAAI,CAACG,KAAL,CAAWJ,IAAX;;AACM,oBAAa,KAAKK,aAAL,CAAmBH,IAAnB,EAAyBC,CAAzB,CAAb,EAAwC,CAAxC;AAAA,QAACG,CAAC,QAAF;AAAA,QAAIC,CAAC,QAAL;AAAA,QAAOC,EAAE,QAAT;;AACN,QAAMC,IAAI,GAAGR,IAAI,CAACS,OAAL,EAAb;AACAT,QAAI,CAACU,KAAL,CAAWH,EAAE,GAAGC,IAAI,CAACG,MAArB,EAA6BL,CAA7B;AACA,SAAKC,EAAL,GAAUF,CAAV;AACD,GANS;;AALIP,kBAAOc,oBAASC,SAAT,CAAmBC,IAA1B;AAahB;AAlBA,EAAuCC,4BAAuDC,mBAAvD,CAAvC;;AAAaC","names":["__extends","SVGmroot","ROOT","root","sbox","H","toSVG","getRootDimens","x","h","dx","bbox","getBBox","place","rscale","mroot_js_2","prototype","kind","mroot_js_1","msqrt_js_1","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/svg/Wrappers/mroot.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGMroot wrapper for the MmlMroot object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, Constructor} from '../Wrapper.js';\nimport {SVGmsqrt} from './msqrt.js';\nimport {CommonMrootMixin} from '../../common/Wrappers/mroot.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMroot} from '../../../core/MmlTree/MmlNodes/mroot.js';\n\n/*****************************************************************/\n/**\n * The SVGmroot wrapper for the MmlMroot object (extends SVGmsqrt)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmroot<N, T, D> extends CommonMrootMixin<Constructor<SVGmsqrt<any, any, any>>>(SVGmsqrt) {\n\n  /**\n   * The mroot wrapper\n   */\n  public static kind = MmlMroot.prototype.kind;\n\n  /**\n   * @override\n   */\n  protected addRoot(ROOT: N, root: SVGWrapper<N, T, D>, sbox: BBox, H: number) {\n    root.toSVG(ROOT);\n    const [x, h, dx] = this.getRootDimens(sbox, H);\n    const bbox = root.getBBox();\n    root.place(dx * bbox.rscale, h);\n    this.dx = x;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}