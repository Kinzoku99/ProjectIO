{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonTeXAtomMixin = void 0;\n\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\n\nfunction CommonTeXAtomMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      _super.prototype.computeBBox.call(this, bbox, recompute);\n\n      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {\n        bbox.ic = this.childNodes[0].bbox.ic;\n      }\n\n      if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {\n        var h = bbox.h,\n            d = bbox.d;\n        var a = this.font.params.axis_height;\n        var dh = (h + d) / 2 + a - h;\n        bbox.h += dh;\n        bbox.d -= dh;\n      }\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonTeXAtomMixin = CommonTeXAtomMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAoBA,SAAgBA,kBAAhB,CAAiEC,IAAjE,EAAwE;AAEtE;AAAqBC;;AAAd;;AAsBN;;AAjBQC,oCAAP,UAAmBC,IAAnB,EAA+BC,SAA/B,EAAyD;AAA1B;AAAAA;AAA0B;;AACvDC,uBAAMC,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBJ,IAAlB,EAAwBC,SAAxB;;AACA,UAAI,KAAKI,UAAL,CAAgB,CAAhB,KAAsB,KAAKA,UAAL,CAAgB,CAAhB,EAAmBL,IAAnB,CAAwBM,EAAlD,EAAsD;AACpDN,YAAI,CAACM,EAAL,GAAU,KAAKD,UAAL,CAAgB,CAAhB,EAAmBL,IAAnB,CAAwBM,EAAlC;AACD;;AAID,UAAI,KAAKC,IAAL,CAAUC,QAAV,KAAuBC,sBAASC,OAApC,EAA6C;AACpC,aAAC,GAAOV,IAAI,EAAZ;AAAA,YAAGW,CAAC,GAAIX,IAAI,EAAZ;AACP,YAAMY,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAA3B;AACA,YAAMC,EAAE,GAAI,CAACC,CAAC,GAAGN,CAAL,IAAU,CAAV,GAAcC,CAAf,GAAoBK,CAA/B;AACAjB,YAAI,CAACiB,CAAL,IAAUD,EAAV;AACAhB,YAAI,CAACW,CAAL,IAAUK,EAAV;AACD;AACF,KAfM;;AAiBT;AAtBO,GAAP,CAAqBnB,IAArB;AAwBD;;AA1BDqB","names":["CommonTeXAtomMixin","Base","__extends","class_1","bbox","recompute","_super","computeBBox","call","childNodes","ic","node","texClass","MmlNode_js_1","VCENTER","d","a","font","params","axis_height","dh","h","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/common/Wrappers/TeXAtom.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonTeXAtom wrapper mixin for the MmlTeXAtom object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom interface\n */\nexport interface CommonTeXAtom extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonTeXAtom constructor\n */\nexport type TeXAtomConstructor = Constructor<CommonTeXAtom>;\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom wrapper mixin for the TeXAtom object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonTeXAtomMixin<T extends WrapperConstructor>(Base: T): TeXAtomConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      super.computeBBox(bbox, recompute);\n      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {\n        bbox.ic = this.childNodes[0].bbox.ic;\n      }\n      //\n      // Center VCENTER atoms vertically\n      //\n      if (this.node.texClass === TEXCLASS.VCENTER) {\n        const {h, d} = bbox;\n        const a = this.font.params.axis_height;\n        const dh = ((h + d) / 2 + a) - h;  // new height minus old height\n        bbox.h += dh;\n        bbox.d -= dh;\n      }\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}