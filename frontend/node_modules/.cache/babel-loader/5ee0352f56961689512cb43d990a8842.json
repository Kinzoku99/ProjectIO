{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncLoad = void 0;\n\nvar mathjax_js_1 = require(\"../mathjax.js\");\n\nfunction asyncLoad(name) {\n  if (!mathjax_js_1.mathjax.asyncLoad) {\n    return Promise.reject(\"Can't load '\" + name + \"': No asyncLoad method specified\");\n  }\n\n  return new Promise(function (ok, fail) {\n    var result = mathjax_js_1.mathjax.asyncLoad(name);\n\n    if (result instanceof Promise) {\n      result.then(function (value) {\n        return ok(value);\n      }).catch(function (err) {\n        return fail(err);\n      });\n    } else {\n      ok(result);\n    }\n  });\n}\n\nexports.asyncLoad = asyncLoad;","map":{"version":3,"mappings":";;;;;;;AAuBA;;AAQA,SAAgBA,SAAhB,CAA0BC,IAA1B,EAAsC;AACpC,MAAI,CAACC,qBAAQF,SAAb,EAAwB;AACtB,WAAOG,OAAO,CAACC,MAAR,CAAe,iBAAeH,IAAf,GAAmB,kCAAlC,CAAP;AACD;;AACD,SAAO,IAAIE,OAAJ,CAAY,UAACE,EAAD,EAAKC,IAAL,EAAS;AAC1B,QAAMC,MAAM,GAAGL,qBAAQF,SAAR,CAAkBC,IAAlB,CAAf;;AACA,QAAIM,MAAM,YAAYJ,OAAtB,EAA+B;AAC7BI,YAAM,CAACC,IAAP,CAAY,UAACC,KAAD,EAAW;AAAK,iBAAE,CAACA,KAAD,CAAF;AAAS,OAArC,EAAuCC,KAAvC,CAA6C,UAACC,GAAD,EAAW;AAAK,mBAAI,CAACA,GAAD,CAAJ;AAAS,OAAtE;AACD,KAFD,MAEO;AACLN,QAAE,CAACE,MAAD,CAAF;AACD;AACF,GAPM,CAAP;AAQD;;AAZDK","names":["asyncLoad","name","mathjax_js_1","Promise","reject","ok","fail","result","then","value","catch","err","exports"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/util/AsyncLoad.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements asynchronous loading of files\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {mathjax} from '../mathjax.js';\n\n/**\n * Load a file asynchronously using the mathjax.asynchLoad method, if there is one\n *\n * @param {string} name  The name of the file to load\n * @return {Promise}     The promise that is satisfied when the file is loaded\n */\nexport function asyncLoad(name: string): Promise<void> {\n  if (!mathjax.asyncLoad) {\n    return Promise.reject(`Can't load '${name}': No asyncLoad method specified`);\n  }\n  return new Promise((ok, fail) => {\n    const result = mathjax.asyncLoad(name);\n    if (result instanceof Promise) {\n      result.then((value: any) => ok(value)).catch((err: Error) => fail(err));\n    } else {\n      ok(result);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}