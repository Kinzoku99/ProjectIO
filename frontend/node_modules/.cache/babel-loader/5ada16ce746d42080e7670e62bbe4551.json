{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGinferredMrow = exports.SVGmrow = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar mrow_js_1 = require(\"../../common/Wrappers/mrow.js\");\n\nvar mrow_js_2 = require(\"../../common/Wrappers/mrow.js\");\n\nvar mrow_js_3 = require(\"../../../core/MmlTree/MmlNodes/mrow.js\");\n\nvar SVGmrow = function (_super) {\n  __extends(SVGmrow, _super);\n\n  function SVGmrow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmrow.prototype.toSVG = function (parent) {\n    var svg = this.node.isInferred ? this.element = parent : this.standardSVGnode(parent);\n    this.addChildren(svg);\n  };\n\n  SVGmrow.kind = mrow_js_3.MmlMrow.prototype.kind;\n  return SVGmrow;\n}(mrow_js_1.CommonMrowMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmrow = SVGmrow;\n\nvar SVGinferredMrow = function (_super) {\n  __extends(SVGinferredMrow, _super);\n\n  function SVGinferredMrow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGinferredMrow.kind = mrow_js_3.MmlInferredMrow.prototype.kind;\n  return SVGinferredMrow;\n}(mrow_js_2.CommonInferredMrowMixin(SVGmrow));\n\nexports.SVGinferredMrow = SVGinferredMrow;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AACA;;AACA;;AACA;;AAWA;AACAA;;AADA;;AAiBC;;AANQC,4BAAP,UAAaC,MAAb,EAAsB;AACpB,QAAMC,GAAG,GAAI,KAAKC,IAAL,CAAUC,UAAV,GAAwB,KAAKC,OAAL,GAAeJ,MAAvC,GAAiD,KAAKK,eAAL,CAAqBL,MAArB,CAA9D;AACA,SAAKM,WAAL,CAAiBL,GAAjB;AAED,GAJM;;AALOF,iBAAOQ,kBAAQC,SAAR,CAAkBC,IAAzB;AAWhB;AAjBA,EACAC,0BAA+CC,uBAA/C,CADA;;AAAaC;;AA4Bb;AACAd;;AADA;;AAQC;;AAFee,yBAAON,0BAAgBC,SAAhB,CAA0BC,IAAjC;AAEhB;AARA,EACAK,kCAA6Df,OAA7D,CADA;;AAAaa","names":["__extends","SVGmrow","parent","svg","node","isInferred","element","standardSVGnode","addChildren","mrow_js_3","prototype","kind","mrow_js_1","Wrapper_js_1","exports","SVGinferredMrow","mrow_js_2"],"sources":["/home/kinzoku99/Desktop/ProjectIO/frontend/node_modules/mathjax-full/ts/output/svg/Wrappers/mrow.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmrow wrapper for the MmlMrow object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMrowMixin} from '../../common/Wrappers/mrow.js';\nimport {CommonInferredMrowMixin} from '../../common/Wrappers/mrow.js';\nimport {MmlMrow, MmlInferredMrow} from '../../../core/MmlTree/MmlNodes/mrow.js';\n\n/*****************************************************************/\n/**\n * The SVGmrow wrapper for the MmlMrow object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmrow<N, T, D> extends\nCommonMrowMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mrow wrapper\n   */\n  public static kind = MmlMrow.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = (this.node.isInferred ? (this.element = parent) : this.standardSVGnode(parent));\n    this.addChildren(svg);\n    // FIXME:  handle line breaks\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  The SVGinferredMrow wrapper for the MmlInferredMrow object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGinferredMrow<N, T, D> extends\nCommonInferredMrowMixin<Constructor<SVGmrow<any, any, any>>>(SVGmrow) {\n\n  /**\n   * The inferred-mrow wrapper\n   */\n  public static kind = MmlInferredMrow.prototype.kind;\n\n}\n"]},"metadata":{},"sourceType":"script"}