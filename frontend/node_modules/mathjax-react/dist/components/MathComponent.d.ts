import * as React from 'react';
import { SourceSpecification } from '../utils/convert';
import { XOR } from 'ts-xor';
interface TeXProps {
    tex: string;
}
interface MathMLProps {
    mathml: string;
}
declare type SourceProps = XOR<MathMLProps, TeXProps>;
declare const defaultProps: {
    display: boolean;
    onError: ((error: string) => void) | null;
    onSuccess: (() => void) | null;
    settings: any;
};
declare type DefaultProps = typeof defaultProps;
declare type State = {
    renderPromise: null | Promise<void>;
    renderResult: string;
    renderSrc: SourceSpecification;
    src: SourceSpecification;
    cancel: () => void;
};
export declare type MathComponentProps = SourceProps & Partial<DefaultProps>;
export declare class MathComponent extends React.Component<MathComponentProps, State> {
    static defaultProps: DefaultProps;
    private rootDivRef;
    private rootSpanRef;
    getRootRef(): React.RefObject<HTMLSpanElement>;
    state: State;
    static parseProps(props: MathComponentProps): SourceSpecification;
    static getDerivedStateFromProps(props: MathComponentProps, state: State): State;
    componentDidMount(): void;
    componentDidUpdate(): void;
    _sendRender(): void;
    render(): JSX.Element;
}
export {};
